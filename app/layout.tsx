import type { Metadata } from 'next';
import Link from 'next/link';
import { Geist, Geist_Mono } from 'next/font/google';
import { Suspense } from 'react';
import './globals.css';

// SEO and metadata
const META_CONTENT = {
  TITLE: 'CertifAI | AI-Powered IT Certification Training',
  DESCRIPTION:
    'Practice IT certifications with AI-generated questions and personalized study recommendations. Join our growing community of 500+ beta users preparing smarter.',
  KEYWORDS:
    'IT certification, exam simulator, AI practice questions, custom exams, study recommendations, IT training, beta testing',
  OG_DESCRIPTION:
    'Practice IT certifications with AI-generated questions and personalized study recommendations. Join 500+ beta users.',
} as const;
const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'certifai',
  description: 'Generated by certifai',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      {/* SEO Meta Tags */}
      <head>
        <title>{META_CONTENT.TITLE}</title>
        <meta name="description" content={META_CONTENT.DESCRIPTION} />
        <meta name="keywords" content={META_CONTENT.KEYWORDS} />
        <meta property="og:title" content={META_CONTENT.TITLE} />
        <meta property="og:description" content={META_CONTENT.OG_DESCRIPTION} />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://yourdomain.com/" />
        <meta property="og:image" content="https://yourdomain.com/og-image.png" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content={META_CONTENT.TITLE} />
        <meta name="twitter:description" content={META_CONTENT.OG_DESCRIPTION} />
        <meta name="twitter:image" content="https://yourdomain.com/og-image.png" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <div className="min-h-screen flex flex-col bg-gray-100 text-gray-900">
          <Suspense
            fallback={
              <div className="min-h-screen flex items-center justify-center">
                <div className="text-center space-y-4">
                  <div className="animate-spin rounded-full h-12 w-12 border-t-4 border-b-4 border-violet-600 mx-auto"></div>
                  <p className="text-lg text-gray-600">Loading...</p>
                </div>
              </div>
            }
          >
            {children}
          </Suspense>
        </div>
        {/* Footer */}
        <footer className="mt-auto py-8 px-6 lg:px-20 bg-gray-800 text-gray-300 text-center">
          <div className="mb-4 flex justify-center space-x-6">
            <Link href="/privacy" className="hover:text-white transition-colors">
              Privacy
            </Link>
            <Link href="/terms" className="hover:text-white transition-colors">
              Terms
            </Link>
            <Link href="/support" className="hover:text-white transition-colors">
              Support
            </Link>
          </div>
          <div>Â© 2025 CertifyIT. All rights reserved.</div>
        </footer>
      </body>
    </html>
  );
}
